<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on ThinkBox</title>
    <link>https://blog.thinkbox.dev/posts/</link>
    <description>Recent content in Posts on ThinkBox</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 03 May 2020 21:16:02 -0400</lastBuildDate>
    
	<atom:link href="https://blog.thinkbox.dev/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Introduction to Packer and Terraform with CentOS 7 on vSphere</title>
      <link>https://blog.thinkbox.dev/posts/0015-iac-centos7-webserver-example/</link>
      <pubDate>Sun, 03 May 2020 21:16:02 -0400</pubDate>
      
      <guid>https://blog.thinkbox.dev/posts/0015-iac-centos7-webserver-example/</guid>
      <description>Introduction Packer and Terraform are both tools created by the company Hashicorp , both of these tools aim to provide automation capabilities. Packer has the goal of creating machine images for multiple different platforms. For example, we can create AMIs for EC2 instances on AWS or VMDK/VMX files for VMware. The whole goal is to automate the ability to create a consistent image that can be used by a specific platform, whether it be AWS or VMware products such as vSphere.</description>
    </item>
    
    <item>
      <title>Configuring Wazuh and Kibana to Monitor Endpoints</title>
      <link>https://blog.thinkbox.dev/posts/0014-setting-up-wazuh/</link>
      <pubDate>Tue, 21 Jan 2020 22:32:25 -0400</pubDate>
      
      <guid>https://blog.thinkbox.dev/posts/0014-setting-up-wazuh/</guid>
      <description>Introduction Wazuh is a host intrusion detection system (HIDS) that is capable of performing log analysis, integrity checking, Windows registry monitoring, rootkit detection, and generating alerts based of a set of predefined rules.
The following picture shows the different components that will be needed on this setup, this picture was found on an article related to this subject. The picture is more specific to OSSEC, however, that is alright since Wazuh is based on OSSEC.</description>
    </item>
    
    <item>
      <title>Monitoring Windows Endpoints with Winlogbeat</title>
      <link>https://blog.thinkbox.dev/posts/0013-monitor-windows-endpoint/</link>
      <pubDate>Mon, 20 Jan 2020 22:32:25 -0400</pubDate>
      
      <guid>https://blog.thinkbox.dev/posts/0013-monitor-windows-endpoint/</guid>
      <description>Introduction This post will introduce the steps needed in order to setup a Windows endpoint to forward logs to Logstash. The following diagram shows a layout of how all the components will interact with each other.
On the Endpoint we have logs that we want to ship to Elasticsearch, these logs include various system logs generated by Windows and Sysmon logs. The Sysmon logs are generated by another program installed on the system which will monitor events related to processes being created and registry values being changed.</description>
    </item>
    
    <item>
      <title>Configuring a Single Node ELK Instance</title>
      <link>https://blog.thinkbox.dev/posts/0012-configure-single-elk-node/</link>
      <pubDate>Wed, 15 Jan 2020 22:32:25 -0400</pubDate>
      
      <guid>https://blog.thinkbox.dev/posts/0012-configure-single-elk-node/</guid>
      <description>Introduction This post will aim to guide you in setting up a ELK stack instance, other posts will go into detail about other aspacts such as monitoring logs on Windows. A brief description will be given on all the components that will be used.
If you are interested in reading more about the technical details of how the different components work please consult the References section, I have linked some interesting articles and videos that can be of use.</description>
    </item>
    
    <item>
      <title>Understanding and Implementing PKI with OpenSSL</title>
      <link>https://blog.thinkbox.dev/posts/0011-pki-with-openssl/</link>
      <pubDate>Wed, 20 Nov 2019 00:44:07 -0400</pubDate>
      
      <guid>https://blog.thinkbox.dev/posts/0011-pki-with-openssl/</guid>
      <description>Introduction This post will aim to give an overview of TLS and public key infrastructure (PKI). This first part of this post will give a theoretical overview of how it works. The second part of the post will demonstrate how to setup a CA with OpenSSL and create certificates for web servers and code singing purposes. Furthermore, the code signing certificate will be used to sign a binary on a Windows machine.</description>
    </item>
    
    <item>
      <title>Creating Device Guard Polices from a Golden Image</title>
      <link>https://blog.thinkbox.dev/posts/0010-device-guard-golden-image/</link>
      <pubDate>Thu, 07 Nov 2019 00:44:07 -0400</pubDate>
      
      <guid>https://blog.thinkbox.dev/posts/0010-device-guard-golden-image/</guid>
      <description>Introduction Device Guard is a system built into Windows 10 that can help mitigate the effects of a breach by controlling which applications are allowed to run, both processess in userland and drivers in the kernel. After Windows 10 1709 Device Guard is now known as Windows Defender Application Control, however, in this post it will be refereed to as Device Guard.
This post will aim to show the steps taken to configure a Device Guard policy based on a golden image, this is a computer that is configured and has all the needed software installed.</description>
    </item>
    
    <item>
      <title>Filtering Domains with Squid Proxy</title>
      <link>https://blog.thinkbox.dev/posts/0009-domain-filter-with-squid/</link>
      <pubDate>Thu, 17 Oct 2019 20:43:53 -0400</pubDate>
      
      <guid>https://blog.thinkbox.dev/posts/0009-domain-filter-with-squid/</guid>
      <description>Introduction Squid is a web proxy with caching and forwarding capabilities, however, this post will not be concerned with caching web content. The focus will be on using Squid to control which domains are accessible to a user, either through blacklisting or whitelisting.
This can be useful for blocking undesired domains, such as those associated with malware or advertisements. On the other hand it can be use to limit what a set of computers in a network can connect to which can potently mitigate the impacts of an attack.</description>
    </item>
    
    <item>
      <title>Transferring and Seizing FSMO Roles</title>
      <link>https://blog.thinkbox.dev/posts/0008-transferring-and-seizing-fsmo-roles/</link>
      <pubDate>Fri, 11 Oct 2019 22:21:18 -0400</pubDate>
      
      <guid>https://blog.thinkbox.dev/posts/0008-transferring-and-seizing-fsmo-roles/</guid>
      <description>Introduction Within a Active Directory environment there are 5 Flexible single master operation (FSMO) roles that are present, they can either all be on a single domain controller or can be distributed between multiple. There are 2 FSMO roles that are forest wide and 3 that are domain wide.
This post will describe the steps taken in order to either transfer a FSMO role to another server, or seize a FSMO role.</description>
    </item>
    
    <item>
      <title>Credential Guard on Windows</title>
      <link>https://blog.thinkbox.dev/posts/0007-cred-guard-windows/</link>
      <pubDate>Sat, 21 Sep 2019 17:50:23 -0400</pubDate>
      
      <guid>https://blog.thinkbox.dev/posts/0007-cred-guard-windows/</guid>
      <description>Introduction This post will aim to explain Credential Guard and Virtualization Based Security (VBS) which is the technology that makes it possible. There has been many discussions, papers, and talks about this subject. The goal of this post is for me to write out the technical details of this technology in my own words.
There are many interesting and insightful resources available online that can also help you understand how this technology works, resources I have found useful will be linked in the References section at the end of the post.</description>
    </item>
    
    <item>
      <title>Updating and Rolling Back ESXi</title>
      <link>https://blog.thinkbox.dev/posts/0006-update-rollback-esxi/</link>
      <pubDate>Fri, 16 Aug 2019 00:15:03 -0400</pubDate>
      
      <guid>https://blog.thinkbox.dev/posts/0006-update-rollback-esxi/</guid>
      <description>Updating ESXi For this example I will be updating ESXi build 8169922 to ESXi build 13981272 . You can check the current build of an ESXi box by running the following command:
1 2 3  [root@testesxi:~] vmware -v VMware ESXi 6.7.0 build-8169922 [root@testesxi:~]   Updates come in the form of ZIP files, this ZIP file is usually downloaded from VMWare website .
After an update file is retrieved check that the hash of the file matches.</description>
    </item>
    
    <item>
      <title>Saving ESXi Configuration State</title>
      <link>https://blog.thinkbox.dev/posts/0005-esxi-save-state/</link>
      <pubDate>Thu, 15 Aug 2019 22:59:00 -0400</pubDate>
      
      <guid>https://blog.thinkbox.dev/posts/0005-esxi-save-state/</guid>
      <description>Saving the configuration state of a standalone ESXi server will allow for the restoration of all configurations if a new instance is installed. This will include all virtual machines registrations, switches, port groups, and system configurations.
Backing Up State Running auto-backup.sh will write the current configuration onto the disk, which is stored in /bootbank/state.tgz. ESXi has a cronjob that will run this script every hour, however, if there was a change made recently and you are backing up the configuration it would be best to run this script.</description>
    </item>
    
    <item>
      <title>Locking Down a Workstation with AppLocker</title>
      <link>https://blog.thinkbox.dev/posts/0004-locking-down-workstation-applocker/</link>
      <pubDate>Sun, 11 Aug 2019 23:23:32 -0400</pubDate>
      
      <guid>https://blog.thinkbox.dev/posts/0004-locking-down-workstation-applocker/</guid>
      <description>Introduction AppLocker is a powerful component of the Windows operating system that allows an administrator to dictate whether a user has permissions to run a file. There are a few different types of files that can be controlled by AppLocker which include executable files (.exe), DLL files (.dll), Windows Installer files (.msi), PowerShell scripts (.ps1), and packaged applications (these include graphical programs such as Settings and the GUI for Defender).</description>
    </item>
    
    <item>
      <title>Creating a Reverse Proxy with Docker</title>
      <link>https://blog.thinkbox.dev/posts/0003-create-reverse-proxy-with-docker/</link>
      <pubDate>Thu, 18 Jul 2019 17:15:47 -0400</pubDate>
      
      <guid>https://blog.thinkbox.dev/posts/0003-create-reverse-proxy-with-docker/</guid>
      <description>Introduction This blog post will explain the concept of a reverse proxy, and will demonstrate the steps that need to be taken in order to create a Nginx reverse proxy inside of Docker.
The concept of a reverse proxy is very simple, a client computer will connect to a central point that will pass their connection on to the desired destination. For example, lets take a look at the diagram below.</description>
    </item>
    
    <item>
      <title>Setting Up Active Directory Network From Scratch</title>
      <link>https://blog.thinkbox.dev/posts/0002-setting-up-ad-from-scratch/</link>
      <pubDate>Wed, 17 Jul 2019 23:48:26 -0400</pubDate>
      
      <guid>https://blog.thinkbox.dev/posts/0002-setting-up-ad-from-scratch/</guid>
      <description>Introduction This blog post will show step by step how to setup a basic Active Directory network. The network will consist of four computers, two servers and two clients. There will be a Domain Controller, a DHCP server, a central management station, and of course a desktop for the clients. This can all be seen in the diagram below.
The purpose of the central management desktop for the administrator to easily manage multiple servers at once.</description>
    </item>
    
    <item>
      <title>OpenVPN with LDAP &#43; 2-Factor Authentication and Network Access Polices</title>
      <link>https://blog.thinkbox.dev/posts/0001-openvpn-ldap-auth/</link>
      <pubDate>Fri, 12 Jul 2019 17:27:32 -0400</pubDate>
      
      <guid>https://blog.thinkbox.dev/posts/0001-openvpn-ldap-auth/</guid>
      <description>Introduction This blog post will explain the steps taken to configure OpenVPN to authenticate users using LDAP authentication and 2-Factor authentication. LDAP authentication will be performed against Active Directory, and 2-Factor authentication will be performed with a Time-based One-Time password (TOTP). Furthermore, the network access of users will be restricted to only what the administrator wants them to access.
This post is split up into 5 sections:
 VPN Server Initial Configuration  Base OpenVPN Configuration  Configuring LDAP Authentication  2-Factor Authentication with TOTP  User Based Network Access Polices   The first section will configure the server on which the VPN server will be setup on.</description>
    </item>
    
  </channel>
</rss>